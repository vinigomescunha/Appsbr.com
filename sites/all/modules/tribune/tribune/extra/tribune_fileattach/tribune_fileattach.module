<?php

function _tribune_fileattach_form($form, $form_state, $node) {
  $form['file_fieldset'] = array(
    '#type' => 'fieldset',
    '#description' => t('Post a file to this tribune.'),
    '#title' => t('File upload'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#submit' => '_tribune_fileattach_form_submit',
    '#prefix' => '<div id="tribune-fileattach-ajax-wrapper">',
    '#suffix' => '</div>',
    'tribune' => array(
      '#type' => 'value',
      '#value' => $node,
    ),
    'tribune-fileattach' => array(
      '#title' => t('File'),
      '#title_display' => 'invisible',
      '#type' => 'managed_file',
      '#size' => 10, // the path field in this widget is useless in most modern browsers..
                     // why display it at all, heh?
      '#upload_location' => 'public://',
    ),
    'tribune-fileattach-submit' => array(
      '#value' => t('Post'),
      '#type' => 'submit',
/* this isn't ready yet, behaviors don't seem to be attached after ajax reload
      '#ajax' => array(
        'callback' => 'tribune_fileattach_ajax_callback',
        'wrapper' => 'tribune-fileattach-ajax-wrapper',
      ),
*/
    ),
  );

  return $form;
}

/**
 * Posts a new message with the uploaded file's url and saves the
 * file as permanent.
 */
function _tribune_fileattach_form_submit($form, $form_state) {
  $fid = $form_state['values']['tribune-fileattach'];

  if ($fid and $file = file_load($fid)) {
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    $url = file_create_url($file->uri);
    $node = $form_state['values']['tribune'];
    $message = $file->filename . ': ' . $url;
    tribune_post($node, $message);
  }
}

/**
 * Not used yet, ajax is disabled.
 */
function tribune_fileattach_ajax_callback($form, $form_state) {
  unset($form['file_fieldset']['tribune-fileattach']['#value']);
  unset($form['file_fieldset']['tribune-fileattach']['#file']);
  return $form['file_fieldset'];
}

function tribune_fileattach_preprocess_tribune(&$variables) {
  $node = $variables['node'];
  if (variable_get('tribune_fileattach_' . $node->nid, FALSE)) {
    // Let's add our own upload and post form here.
    $form = drupal_get_form('_tribune_fileattach_form', $node);
    $variables['form'] .= drupal_render($form);
  }
}

/**
 * Implements hook_tribune_form().
 */
function tribune_fileattach_tribune_form($node, $form_state) {
  $default_value = 'FALSE';
  if (!empty($node->nid)) {
    $default_value = variable_get('tribune_fileattach_' . $node->nid, FALSE);
  }

  return array(
    'tribune_fileattach_details' => array(
      '#weight' => 10,
      '#type' => 'fieldset',
      '#title' => t('File attachments'),

      'tribune_fileattach_enabled' => array(
        '#type' => 'checkbox',
        '#title' => t('Enable file attachments'),
        '#default_value' => $default_value,
      ),
    ),
  );
}

/**
 * Implements hook_node_update().
 */
function tribune_fileattach_node_update($node) {
  if ($node->type == 'tribune') {
    variable_set('tribune_fileattach_' . $node->nid, $node->tribune_fileattach_enabled);
  }
}

/**
 * Implements hook_node_insert().
 */
function tribune_fileattach_node_insert($node) {
  if ($node->type == 'tribune') {
    variable_set('tribune_fileattach_' . $node->nid, $node->tribune_fileattach_enabled);
  }
}

/**
 * Implements hook_node_delete().
 */
function tribune_fileattach_node_delete($node) {
  if ($node->type == 'tribune') {
    variable_del('tribune_fileattach_' . $node->nid);
  }
}


