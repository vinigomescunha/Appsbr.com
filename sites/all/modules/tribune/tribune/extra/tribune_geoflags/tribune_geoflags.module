<?php

function tribune_geoflags_preprocess_tribune(&$variables) {
  return;

  $node = $variables['node'];
  if (variable_get('tribune_geoflags_' . $node->nid, FALSE)) {
    // Let's add our own upload and post form here.
    $form = drupal_get_form('_tribune_geoflags_form', $node);
    $variables['form'] .= drupal_render($form);
  }
}

/**
 * Implements hook_tribune_form().
 */
function tribune_geoflags_tribune_form($node, $form_state) {
  $default_value = 'FALSE';
  if (!empty($node->nid)) {
    $default_value = variable_get('tribune_geoflags_' . $node->nid, FALSE);
  }

  return array(
    'tribune_geoflags_details' => array(
      '#weight' => 10,
      '#type' => 'fieldset',
      '#title' => t('Geo flags'),

      'tribune_geoflags_enabled' => array(
        '#type' => 'checkbox',
        '#title' => t('Enable geo flags'),
        '#default_value' => $default_value,
      ),
    ),
  );
}

/**
 * Implements hook_node_update().
 */
function tribune_geoflags_node_update($node) {
  if ($node->type == 'tribune' and isset($node->tribune_geoflags_enabled)) {
    variable_set('tribune_geoflags_' . $node->nid, $node->tribune_geoflags_enabled);
  }
}

/**
 * Implements hook_node_insert().
 */
function tribune_geoflags_node_insert($node) {
  if ($node->type == 'tribune' and isset($node->tribune_geoflags_enabled)) {
    variable_set('tribune_geoflags_' . $node->nid, $node->tribune_geoflags_enabled);
  }
}

/**
 * Implements hook_node_delete().
 */
function tribune_geoflags_node_delete($node) {
  if ($node->type == 'tribune') {
    variable_del('tribune_geoflags_' . $node->nid);
  }
}

/**
 * Implements hook_tribune_after_post().
 */
function tribune_geoflags_tribune_after_post($node, $post) {
  // No need to do anything if we can't store which post this is
  if (variable_get('tribune_geoflags_' . $node->nid, FALSE) and isset($post['post_id'])) {
    $country_code = geoip_country_code_by_name($_SERVER['REMOTE_ADDR']) ?: 'XX';

    db_insert('tribune_posts_geoflags')
      ->fields(array(
        'nid' => $node->nid,
        'post_id' => $post['post_id'],
        'country_code' => $country_code,
      ))
      ->execute();
  }
}

/**
 * Implements hook_tribune_posts_alter().
 */
function tribune_geoflags_tribune_posts_alter($node, &$posts) {
  if (variable_get('tribune_geoflags_' . $node->nid, FALSE) and !empty($posts)) {
    $post_ids = array_keys($posts);

    $countries = db_select('tribune_posts_geoflags')
      ->fields('tribune_posts_geoflags', array('post_id', 'country_code'))
      ->condition('post_id', $post_ids, 'IN')
      ->execute()
      ->fetchAllKeyed();

    foreach ($countries as $post_id => $country_code) {
      $posts[$post_id]['tribune_geoflags_country_code'] = $country_code;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function tribune_geoflags_preprocess_tribune_post(&$variables) {
  if (variable_get('tribune_geoflags_' . $variables['node']->nid, FALSE)) {
    $countries = country_get_list();

    $country_code = isset($variables['post']['tribune_geoflags_country_code']) ? $variables['post']['tribune_geoflags_country_code'] : 'XX';
    $country = htmlspecialchars(isset($countries[$country_code]) ? $countries[$country_code] : t('Unknown'));

    $image_file = drupal_get_path('module', 'tribune_geoflags') . '/flags/' . strtolower($country_code) . '.png';
    if (!file_exists($image_file)) {
      $image_file = drupal_get_path('module', 'tribune_geoflags') . '/flags/xx.png';
    }
    $img_src = url($image_file);
    $img = '<img alt="' . $country . '" title="' . $country . '" src="' . $img_src . '" />';
    $variables['post']['prefix'] .= '<span class="tribune-geoflag" data-geoflag="' . $country_code . '">' . $img . '</span>';
  }
}
